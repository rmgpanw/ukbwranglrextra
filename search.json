[{"path":"https://rmgpanw.github.io/ukbwranglrextra/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Alasdair Warwick Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alasdair Warwick. Author, maintainer.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Warwick (2022). ukbwranglrextra: Exploring UKB Data - Extra. https://github.com/rmgpanw/ukbwranglrextra, https://rmgpanw.github.io/ukbwranglrextra/.","code":"@Manual{,   title = {ukbwranglrextra: Exploring UKB Data - Extra},   author = {Alasdair Warwick},   year = {2022},   note = {https://github.com/rmgpanw/ukbwranglrextra, https://rmgpanw.github.io/ukbwranglrextra/}, }"},{"path":"https://rmgpanw.github.io/ukbwranglrextra/index.html","id":"ukbwranglrextra","dir":"","previous_headings":"","what":"Exploring UKB Data - Extra","title":"Exploring UKB Data - Extra","text":"package containing experimental add-functions ukbwranglr.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Exploring UKB Data - Extra","text":"can install development version ukbwranglrextra github :","code":"devtools::install_github(\"rmgpanw/ukbwranglrextra\")"},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/append_rowwise_summary_indicator.html","id":null,"dir":"Reference","previous_headings":"","what":"Append a rowwise summary indicator column — append_rowwise_summary_indicator","title":"Append a rowwise summary indicator column — append_rowwise_summary_indicator","text":"Low level function appends (binary) indicator column dataframe, summarising rowwise whether values selection existing columns match one specified values.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/append_rowwise_summary_indicator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append a rowwise summary indicator column — append_rowwise_summary_indicator","text":"","code":"append_rowwise_summary_indicator(   df,   cols,   yes_values,   new_indicator_colname,   new_indicator_var_label,   new_indicator_yes_value = \"Yes\",   new_indicator_no_value = \"No\" )"},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/append_rowwise_summary_indicator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append a rowwise summary indicator column — append_rowwise_summary_indicator","text":"df Data frame cols Character vector columns summarise yes_values Vector. new_indicator_colname \"Yes\" values cols (rowwise) match one values. new_indicator_colname Name new indicator column. new_indicator_var_label Character string set variable label new indicator column. new_indicator_yes_value Default \"Yes\". new_indicator_no_value Default \"\"","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/append_rowwise_summary_indicator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append a rowwise summary indicator column — append_rowwise_summary_indicator","text":"data frame additional column, named per new_indicator_colname.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/append_rowwise_summary_indicator.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Append a rowwise summary indicator column — append_rowwise_summary_indicator","text":"","code":"# example input df df <- tibble::tribble( ~med_1, ~med_2, ~med_3, ~IGNORED_COL, \"Beta blocker\", NA, NA, \"Beta blocker\", \"ACE inhibitor\", \"Beta blocker\", NA, \"Beta blocker\", \"Aspirin\", \"Aspirin\", NA, \"Beta blocker\", \"Aspirin\", \"ACE inhibitor\", NA, \"Beta blocker\" )  # add indicator col df <- append_rowwise_summary_indicator(df = df, cols = c(\"med_1\", \"med_2\", \"med_3\"), yes_values = c(\"Beta blocker\", \"ACE inhibitor\"), new_indicator_colname = \"on_anti_hypertensive\", new_indicator_var_label = \"Taking anti-hypertensive medication\", new_indicator_yes_value = \"Yes\", new_indicator_no_value = \"No\")  # print result print(df) #> # A tibble: 4 × 5 #>   med_1         med_2         med_3 IGNORED_COL  on_anti_hypertensive #>   <chr>         <chr>         <lgl> <chr>        <chr>                #> 1 Beta blocker  NA            NA    Beta blocker Yes                  #> 2 ACE inhibitor Beta blocker  NA    Beta blocker Yes                  #> 3 Aspirin       Aspirin       NA    Beta blocker No                   #> 4 Aspirin       ACE inhibitor NA    Beta blocker Yes                   # print variable label for new column print(attributes(df$on_anti_hypertensive)$label) #> [1] \"Taking anti-hypertensive medication\""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/create_unique_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a unique participant ID by combining UKB data field IDs — create_unique_id","title":"Create a unique participant ID by combining UKB data field IDs — create_unique_id","text":"Creates unique participant ID concatenating values selection UKB data fields. error raised final ID column contains non-unique values.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/create_unique_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a unique participant ID by combining UKB data field IDs — create_unique_id","text":"","code":"create_unique_id(   ukb_main,   ukb_data_dict = ukbwranglr::get_ukb_data_dict(),   field_ids = c(\"31\", \"52\", \"34\", \"21000\", \"53\", \"96\", \"50\"),   id_col = \"..unique_id\",   remove = TRUE,   .ignore_duplicate_ids = FALSE )"},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/create_unique_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a unique participant ID by combining UKB data field IDs — create_unique_id","text":"ukb_main data frame - UKB main dataset. ukb_data_dict UK Biobank data dictionary (available data online). field_ids character vector fields IDs used create new unique ID column. match values column 'Field' UK Biobank data dictionary. id_col Name new column created. remove TRUE, remove input columns output data frame. .ignore_duplicate_ids TRUE, allow duplicate ID values raise warning found. May helpful debugging. default FALSE.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/create_unique_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a unique participant ID by combining UKB data field IDs — create_unique_id","text":"data frame additional column named specified id_col.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/create_unique_id.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a unique participant ID by combining UKB data field IDs — create_unique_id","text":"default, following field IDs used: 31 (Sex), 52 (Month birth), 34 (Year birth), 21000 (Ethnic background), 53 (Date attending assessment centre), 96 (Time since interview start blood pressure screen(s) shown), 50 (Standing height).","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/create_unique_id_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a UKB data frame with a unique ID column — create_unique_id_df","title":"Create a UKB data frame with a unique ID column — create_unique_id_df","text":"convenience function returns data frame main UK Biobank dataset unique ID column, created concatenating values selection variables.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/create_unique_id_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a UKB data frame with a unique ID column — create_unique_id_df","text":"","code":"create_unique_id_df(   path,   delim = \"\\t\",   ukb_data_dict = ukbwranglr::get_ukb_data_dict(),   ukb_codings = ukbwranglr::get_ukb_codings(),   descriptive_colnames = TRUE,   labelled = TRUE,   field_ids = c(\"31\", \"52\", \"34\", \"21000\", \"53\", \"96\", \"50\"),   id_col = \"..unique_id\",   remove = TRUE,   .ignore_duplicate_ids = FALSE )"},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/create_unique_id_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a UKB data frame with a unique ID column — create_unique_id_df","text":"path path UK Biobank main dataset file. delim Delimiter UK Biobank main dataset file. Default \\t ukb_data_dict UKB data dictionary (available online UK Biobank data  showcase. data frame columns type character. default, downloaded ukbwranglr_resources  github repo. ukb_codings UKB codings dictionary. data frame columns type character. default, downloaded ukbwranglr_resources  github repo. descriptive_colnames TRUE, rename columns longer descriptive names derived UK Biobank's data dictionary 'Field' column. labelled TRUE, apply variable value labels using labelled. field_ids character vector fields IDs used create new unique ID column. match values column 'Field' UK Biobank data dictionary. id_col Name new column created. remove TRUE, remove input columns output data frame. .ignore_duplicate_ids TRUE, allow duplicate ID values raise warning found. May helpful debugging. default FALSE.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/create_unique_id_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a UKB data frame with a unique ID column — create_unique_id_df","text":"data frame","code":""},{"path":[]},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/derive_touchscreen_self_reported_med_bp_dm_chol_exog_hormones.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise UK Biobank touchscreen responses for self-reported medications\n(cholesterol, blood pressure, diabetes or take exogenous hormones) — derive_touchscreen_self_reported_med_bp_dm_chol_exog_hormones","title":"Summarise UK Biobank touchscreen responses for self-reported medications\n(cholesterol, blood pressure, diabetes or take exogenous hormones) — derive_touchscreen_self_reported_med_bp_dm_chol_exog_hormones","text":"Summarises field IDs 6153 6177. returned data frame contains separate indicator columns medication type.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/derive_touchscreen_self_reported_med_bp_dm_chol_exog_hormones.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise UK Biobank touchscreen responses for self-reported medications\n(cholesterol, blood pressure, diabetes or take exogenous hormones) — derive_touchscreen_self_reported_med_bp_dm_chol_exog_hormones","text":"","code":"derive_touchscreen_self_reported_med_bp_dm_chol_exog_hormones(   ukb_main,   ukb_data_dict = ukbwranglr::get_ukb_data_dict(),   instance = NULL,   .drop = TRUE )"},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/derive_touchscreen_self_reported_med_bp_dm_chol_exog_hormones.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise UK Biobank touchscreen responses for self-reported medications\n(cholesterol, blood pressure, diabetes or take exogenous hormones) — derive_touchscreen_self_reported_med_bp_dm_chol_exog_hormones","text":"ukb_main UK Biobank main dataset (data frame). ukb_data_dict UKB data dictionary (available online UK Biobank data  showcase. data frame columns type character. default, downloaded ukbwranglr_resources  github repo. instance Character. Optionally specify single instance summarised e.g. '1'. Default NULL, case appended columns reflect summary across available instances. .drop TRUE, remove input columns Field IDs 6153 6177 output.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/derive_touchscreen_self_reported_med_bp_dm_chol_exog_hormones.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise UK Biobank touchscreen responses for self-reported medications\n(cholesterol, blood pressure, diabetes or take exogenous hormones) — derive_touchscreen_self_reported_med_bp_dm_chol_exog_hormones","text":"data frame.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/derive_touchscreen_self_reported_med_bp_dm_chol_exog_hormones.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarise UK Biobank touchscreen responses for self-reported medications\n(cholesterol, blood pressure, diabetes or take exogenous hormones) — derive_touchscreen_self_reported_med_bp_dm_chol_exog_hormones","text":"Note field ID 6153 applies female participants, field ID6177 applies male participants.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/map_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Create multiple models which vary by one parameter — map_models","title":"Create multiple models which vary by one parameter — map_models","text":"Use creating multiple models vary one parameter. See example .","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/map_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create multiple models which vary by one parameter — map_models","text":"","code":"map_models(   df,   params,   model_str,   engine = parsnip::set_engine(object = parsnip::logistic_reg(), engine = \"glm\"),   rm_raw_model = TRUE )"},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/map_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create multiple models which vary by one parameter — map_models","text":"df Data frame. params character vector values substitute .x model_str. model_str model formula string, containing one variable .x. engine parsnip engine. rm_raw_model TRUE (default), raw models removed.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/map_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create multiple models which vary by one parameter — map_models","text":"data frame","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/map_models.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create multiple models which vary by one parameter — map_models","text":"Ideally aim supply df without missing data. Otherwise, check N observations models (fit column, model_glance) see many () observations removed.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/map_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create multiple models which vary by one parameter — map_models","text":"","code":"# dummy dataset mtcars2 <- mtcars %>%  tibble::rownames_to_column(var = \"make\") %>%  dplyr::mutate(\"is_merc\" = ifelse(stringr::str_detect(.data[[\"make\"]], pattern = \"^Merc\"),                                   yes = 1,                                   no = 0 )) %>%  tibble::as_tibble() %>%  dplyr::mutate(dplyr::across(tidyselect::starts_with(\"is_\"), as.factor))  # preview dummy dataset mtcars2 #> # A tibble: 32 × 13 #>    make          mpg   cyl  disp    hp  drat    wt  qsec    vs    am  gear  carb #>    <chr>       <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> #>  1 Mazda RX4    21       6  160    110  3.9   2.62  16.5     0     1     4     4 #>  2 Mazda RX4 …  21       6  160    110  3.9   2.88  17.0     0     1     4     4 #>  3 Datsun 710   22.8     4  108     93  3.85  2.32  18.6     1     1     4     1 #>  4 Hornet 4 D…  21.4     6  258    110  3.08  3.22  19.4     1     0     3     1 #>  5 Hornet Spo…  18.7     8  360    175  3.15  3.44  17.0     0     0     3     2 #>  6 Valiant      18.1     6  225    105  2.76  3.46  20.2     1     0     3     1 #>  7 Duster 360   14.3     8  360    245  3.21  3.57  15.8     0     0     3     4 #>  8 Merc 240D    24.4     4  147.    62  3.69  3.19  20       1     0     4     2 #>  9 Merc 230     22.8     4  141.    95  3.92  3.15  22.9     1     0     4     2 #> 10 Merc 280     19.2     6  168.   123  3.92  3.44  18.3     1     0     4     4 #> # … with 22 more rows, and 1 more variable: is_merc <fct>  # run `map_models()` - logistic regression to predict Mercedes make result <- map_models(   df = mtcars2,   model_str = \"is_merc ~ mpg + cyl + disp + {.x}\",   params = c(GEAR = 'gear', CARB = 'carb'),   engine = parsnip::set_engine(object = parsnip::logistic_reg(), engine = \"glm\"),   rm_raw_model = FALSE ) #> Registered S3 method overwritten by 'tune': #>   method                   from    #>   required_pkgs.model_spec parsnip #> gear, 1 of 2 #> carb, 2 of 2  # view result result #> # A workflow set/tibble: 2 × 6 #>   wflow_id info             option    result     wflow_label fit              #>   <chr>    <list>           <list>    <list>     <chr>       <list>           #> 1 gear     <tibble [1 × 4]> <opts[0]> <list [0]> GEAR        <named list [3]> #> 2 carb     <tibble [1 × 4]> <opts[0]> <list [0]> CARB        <named list [3]>  # model outputs are stored in the `fit` column names(result$fit[[1]]) #> [1] \"model_raw\"    \"model_tidy\"   \"model_glance\"  # 'tidy' model outputs are under `model_tidy` result$fit[[1]]$model_tidy #> # A tibble: 5 × 5 #>   term        estimate std.error statistic p.value #>   <chr>          <dbl>     <dbl>     <dbl>   <dbl> #> 1 (Intercept)   9.81      8.37       1.17   0.242  #> 2 mpg          -0.297     0.228     -1.31   0.191  #> 3 cyl           0.752     0.771      0.975  0.330  #> 4 disp         -0.0294    0.0155    -1.89   0.0583 #> 5 gear         -0.954     0.951     -1.00   0.316   # 'glance' model outputs are under `model_glance` result$fit[[1]]$model_glance #> # A tibble: 1 × 8 #>   null.deviance df.null logLik   AIC   BIC deviance df.residual  nobs #>           <dbl>   <int>  <dbl> <dbl> <dbl>    <dbl>       <int> <int> #> 1          33.6      31  -13.3  36.7  44.0     26.7          27    32  # `model_raw` contains either the raw model under `result`, or an error message under `error` names(result$fit[[1]]$model_raw) #> [1] \"result\" \"error\""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/runMakeDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactively create a UK Biobank dataset — runMakeDataset","title":"Interactively create a UK Biobank dataset — runMakeDataset","text":"Launches shiny app interactively create UK Biobank dataset","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/runMakeDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactively create a UK Biobank dataset — runMakeDataset","text":"","code":"runMakeDataset(   ukb_data_dict = ukbwranglr::get_ukb_data_dict(),   ukb_codings = ukbwranglr::get_ukb_codings(),   options = list(launch.browser = TRUE),   ... )"},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/runMakeDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactively create a UK Biobank dataset — runMakeDataset","text":"ukb_data_dict UKB data dictionary (available online UK Biobank data  showcase. data frame columns type character. default, downloaded ukbwranglr_resources  github repo. ukb_codings UKB codings dictionary. data frame columns type character. default, downloaded ukbwranglr_resources  github repo. options Named options passed runApp call (can following: \"port\", \"launch.browser\", \"host\", \"quiet\", \"display.mode\" \"test.mode\"). can also specify width height parameters provide hint embedding environment ideal height/width app. ... Additional parameters passed shinyApp","code":""},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/runMakeDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interactively create a UK Biobank dataset — runMakeDataset","text":"","code":"if (FALSE) {   runMakeDataset() }"},{"path":"https://rmgpanw.github.io/ukbwranglrextra/reference/ukbwranglrextra.html","id":null,"dir":"Reference","previous_headings":"","what":"ukbwranglrextra: a package for UK Biobank data wrangling — ukbwranglrextra","title":"ukbwranglrextra: a package for UK Biobank data wrangling — ukbwranglrextra","text":"Extra experimental functions support ukbwranglr R package.","code":""}]
